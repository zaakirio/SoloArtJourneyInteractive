{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/rubinkazan/Dev/React/soloartist-journey/src/components/CurriculumCard.tsx"],"sourcesContent":["// CurriculumCard.tsx\nimport { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { BookOpen, Youtube, BookmarkCheck, GraduationCap, ChevronDown, X, Palette, Book, Pencil } from 'lucide-react';\n\ninterface CurriculumCardProps {\n  termData: Term;\n}\n\n// Color theme mapping for different terms\nconst termColors = {\n  1: { bg: 'bg-rose-50', accent: 'bg-rose-500', text: 'text-rose-700', hover: 'hover:bg-rose-100', border: 'border-rose-200' },\n  2: { bg: 'bg-violet-50', accent: 'bg-violet-500', text: 'text-violet-700', hover: 'hover:bg-violet-100', border: 'border-violet-200' },\n  3: { bg: 'bg-cyan-50', accent: 'bg-cyan-500', text: 'text-cyan-700', hover: 'hover:bg-cyan-100', border: 'border-cyan-200' },\n  4: { bg: 'bg-amber-50', accent: 'bg-amber-500', text: 'text-amber-700', hover: 'hover:bg-amber-100', border: 'border-amber-200' },\n  5: { bg: 'bg-emerald-50', accent: 'bg-emerald-500', text: 'text-emerald-700', hover: 'hover:bg-emerald-100', border: 'border-emerald-200' },\n  6: { bg: 'bg-indigo-50', accent: 'bg-indigo-500', text: 'text-indigo-700', hover: 'hover:bg-indigo-100', border: 'border-indigo-200' },\n};\n\nexport const CurriculumCard = ({ termData }: CurriculumCardProps) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const colors = termColors[termData.term as keyof typeof termColors];\n\n  const getIcon = (type: Resource['type']) => {\n    switch (type) {\n      case 'book':\n        return <BookOpen className=\"w-5 h-5\" />;\n      case 'youtube':\n        return <Youtube className=\"w-5 h-5\" />;\n      case 'challenge':\n        return <BookmarkCheck className=\"w-5 h-5\" />;\n      case 'course':\n        return <GraduationCap className=\"w-5 h-5\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getUnitIcon = (title: string) => {\n    if (title.toLowerCase().includes('drawing')) return <Pencil className=\"w-6 h-6\" />;\n    if (title.toLowerCase().includes('perspective')) return <Book className=\"w-6 h-6\" />;\n    if (title.toLowerCase().includes('composition')) return <Palette className=\"w-6 h-6\" />;\n    return <GraduationCap className=\"w-6 h-6\" />;\n  };\n\n  const cardVariants = {\n    collapsed: {\n      width: '100%',\n      height: '300px',\n      position: 'relative' as const,\n    },\n    expanded: {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed' as const,\n      top: 0,\n      left: 0,\n      zIndex: 50,\n    },\n  };\n\n  const renderResource = (resource: Resource) => {\n    switch (resource.type) {\n      case 'course':\n        return (\n          <a\n            href={resource.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"block text-blue-600 hover:underline\"\n          >\n            {resource.title}\n          </a>\n        );\n      \n      case 'youtube':\n        return (\n          <div className=\"space-y-2 mt-2\">\n            {resource.videos!.map((video, vIndex) => (\n              <a\n                key={vIndex}\n                href={video.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"block text-blue-600 hover:underline\"\n              >\n                {video.title}\n              </a>\n            ))}\n          </div>\n        );\n      \n      case 'book':\n        return (\n          <div>\n            {resource.title} by {resource.author}\n          </div>\n        );\n      \n      case 'challenge':\n        return (\n          <div>\n            {resource.url ? (\n              <a\n                href={resource.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"block text-blue-600 hover:underline\"\n              >\n                {resource.title}\n              </a>\n            ) : (\n              <div>{resource.title}</div>\n            )}\n            {resource.tasks && (\n              <ul className=\"list-disc pl-5 mt-2 space-y-1\">\n                {resource.tasks.map((task, tIndex) => (\n                  <li key={tIndex}>{task}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <motion.div\n      layout\n      variants={cardVariants}\n      initial=\"collapsed\"\n      animate={isExpanded ? 'expanded' : 'collapsed'}\n      transition={{ duration: 0.3, ease: 'easeInOut' }}\n      className={`${colors.bg} rounded-xl shadow-lg overflow-hidden cursor-pointer border ${colors.border} mb-6`}\n      onClick={() => !isExpanded && setIsExpanded(true)}\n    >\n      {isExpanded ? (\n        <div className=\"p-6 h-full overflow-y-auto bg-white\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className={`text-3xl font-bold ${colors.text}`}>Term {termData.term}</h1>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setIsExpanded(false);\n              }}\n              className={`p-2 ${colors.hover} rounded-full transition-colors`}\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {termData.units.map((unit, index) => (\n              <div \n                key={index} \n                className={`${colors.bg} rounded-lg p-6 border ${colors.border}`}\n              >\n                <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n                  {getUnitIcon(unit.title)}\n                  {unit.title}\n                </h2>\n                <div className=\"space-y-4\">\n                  {unit.resources.map((resource, rIndex) => (\n                    <div key={rIndex} className=\"bg-white rounded-lg p-4 shadow-sm\">\n                      <div className=\"flex items-center gap-2 text-gray-700 mb-2\">\n                        {getIcon(resource.type)}\n                        <span className=\"capitalize font-medium\">{resource.type}</span>\n                      </div>\n                      {renderResource(resource)}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className={`p-6 h-full flex flex-col`}>\n          <div className=\"flex justify-between items-center mb-6\">\n            <div className={`${colors.accent} text-white px-4 py-1 rounded-full text-sm font-medium`}>\n              Term {termData.term}\n            </div>\n            <ChevronDown className={`w-5 h-5 ${colors.text}`} />\n          </div>\n          <div className=\"space-y-4 flex-grow\">\n            {termData.units.map((unit, index) => (\n              <div key={index} className={`flex items-center gap-2 ${colors.text}`}>\n                {getUnitIcon(unit.title)}\n                <span className=\"font-medium\">{unit.title}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"mt-4 flex gap-2 flex-wrap\">\n            {Array.from(new Set(termData.units.flatMap(unit => \n              unit.resources.map(resource => resource.type)\n            ))).map((type) => (\n              <div key={type} className={`flex items-center gap-1 ${colors.text} text-sm`}>\n                {getIcon(type as Resource['type'])}\n                <span className=\"capitalize\">{type}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\n// Grid Layout Component\nexport const CurriculumGrid = ({ terms }: { terms: Term[] }) => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-6\">\n      {terms.map((term) => (\n        <CurriculumCard key={term.term} termData={term} />\n      ))}\n    </div>\n  );\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///home/rubinkazan/Dev/React/soloartist-journey/src/pages/index.tsx"],"sourcesContent":["import type { NextPage } from 'next';\nimport \"../styles/globals.css\";\nimport { CurriculumGrid } from '@/components/CurriculumCard';\nimport term1Data from '../data/curriculum/term-1.json';\nimport term2Data from '../data/curriculum/term-2.json';\nimport term3Data from '../data/curriculum/term-3.json';\nimport term4Data from '../data/curriculum/term-4.json';\nimport term5Data from '../data/curriculum/term-5.json';\nimport term6Data from '../data/curriculum/term-6.json';\n\nconst Home: NextPage = () => {\n  const terms = [\n    term1Data,\n    term2Data,\n    term3Data,\n    term4Data,\n    term5Data,\n    term6Data\n  ];\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      <CurriculumGrid terms={terms as Term[]} />\n    </div>\n  );\n};\n\nexport default Home;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEA,MAAM,OAAiB;IACrB,MAAM,QAAQ;QACZ,8GAAA,CAAA,UAAS;QACT,8GAAA,CAAA,UAAS;QACT,8GAAA,CAAA,UAAS;QACT,8GAAA,CAAA,UAAS;QACT,8GAAA,CAAA,UAAS;QACT,8GAAA,CAAA,UAAS;KACV;IAED,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC,6HAAA,CAAA,iBAAc;YAAC,OAAO;;;;;;;;;;;AAG7B;uCAEe"}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}